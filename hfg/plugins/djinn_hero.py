from abc import ABC

import pyxel
import time
import sys
import os
from pydub import AudioSegment
from pydub.playback import play

sys.path.append("..")

from plugins import Hero, Enemy, plugin
from base import threaded
from shapes import *

@plugin
class DjinnHero(Hero):
    def __init__(self, resources_path: str = __file__):
        super().__init__(width=60, height=70, name="djinn", title="Djinn", special_color=pyxel.COLOR_LIME)
        self.is_blocked = False
        # self.rect = Rectangle(0, 0, self.width, self.height, pyxel.COLOR_GREEN, self.frame)
        #  self.sprinkles = Sprinkles(100, pyxel.COLOR_BROWN, self.rect)

    def selection_preview(self):

        colors = [
            pyxel.COLOR_NAVY,
            pyxel.COLOR_RED,
            pyxel.COLOR_BLACK,
            pyxel.COLOR_DARKGRAY,
            pyxel.COLOR_WHITE,
            pyxel.COLOR_RED,
            pyxel.COLOR_PINK,
            pyxel.COLOR_ORANGE
        ]
        bitmap = [
            [3, 3, 1, 1, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 2, 7, 2, 1, 1, 1, 1, 2, 1, 1],
            [3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 2, 1],
            [3, 3, 3, 3, 3, 3, 3, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 2, 1, 1, 2, 0, 0, 2, 1],
            [3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 2, 0, 2, 1],
            [3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 2, 0, 2, 1],
            [1, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2, 1, 1],
            [1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 1, 1, 1, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 2, 0, 0,
             0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2, 1, 1, 1],
            [1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0,
             0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2, 1, 1, 1],
            [1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0,
             0, 0, 0, 0, 2, 0, 2, 0, 0, 2, 1, 1, 1, 3],
            [1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0,
             0, 0, 0, 2, 0, 0, 2, 0, 0, 2, 1, 3, 3, 3],
            [1, 1, 1, 3, 3, 3, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 2, 0, 0, 2, 0, 0, 2, 1, 3, 3, 3, 1],
            [1, 1, 1, 3, 3, 1, 1, 1, 3, 3, 3, 1, 1, 3, 3, 3, 3, 3, 3, 2, 4, 2, 0, 0, 0, 0, 2, 4, 4, 2, 0, 0, 0, 0, 0, 0,
             0, 2, 0, 0, 0, 2, 0, 0, 2, 1, 1, 3, 1, 1],
            [1, 1, 1, 3, 3, 1, 1, 3, 3, 3, 3, 3, 1, 1, 3, 3, 3, 3, 2, 4, 4, 2, 0, 0, 0, 2, 4, 4, 4, 4, 2, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 3, 1, 1, 1],
            [1, 1, 1, 3, 3, 1, 1, 3, 1, 1, 3, 3, 1, 1, 1, 3, 3, 3, 2, 4, 4, 4, 2, 0, 2, 4, 4, 4, 4, 4, 2, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 1, 1, 1],
            [1, 1, 1, 3, 3, 3, 1, 1, 1, 1, 3, 3, 1, 1, 1, 1, 3, 3, 2, 4, 4, 4, 2, 0, 2, 4, 4, 4, 4, 4, 2, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 2, 0, 0, 2, 1, 1, 1, 1, 1, 3],
            [1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 2, 4, 4, 4, 2, 0, 2, 4, 4, 4, 4, 4, 2, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 2, 0, 0, 2, 3, 1, 1, 3, 3, 3],
            [3, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 2, 4, 4, 2, 2, 0, 2, 4, 4, 2, 4, 4, 2, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 2, 0, 2, 3, 3, 3, 3, 3, 3],
            [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 2, 2, 0, 2, 4, 4, 2, 4, 2, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 2, 0, 2, 3, 3, 3, 3, 3, 3],
            [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 2, 4, 4, 4, 2, 0, 2, 4, 4, 4, 2, 2, 2, 2, 2, 0, 0, 0,
             0, 0, 0, 0, 2, 0, 0, 2, 1, 3, 3, 3, 3, 1],
            [3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 2, 0, 0, 0, 0, 0, 2, 4, 2, 0, 0, 0, 2, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1],
            [1, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2,
             2, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 2, 4, 2, 2,
             0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0],
            [1, 1, 1, 1, 3, 3, 1, 1, 3, 3, 1, 1, 1, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 2, 0, 2,
             0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 3],
            [1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 3, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 4, 2, 0, 2,
             0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 3, 3],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 2, 4, 4, 4, 2, 0, 2,
             0, 0, 2, 0, 0, 0, 0, 2, 1, 1, 1, 3, 3, 3],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 2, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 4, 4, 4, 2, 2, 0, 2,
             2, 0, 2, 2, 0, 0, 2, 1, 1, 1, 3, 3, 3, 1],
            [1, 1, 3, 3, 1, 1, 1, 3, 3, 1, 3, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 4, 4, 4, 2, 2, 5, 2, 0, 2,
             2, 0, 2, 0, 2, 2, 2, 1, 1, 3, 3, 3, 1, 1],
            [1, 3, 3, 3, 3, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 0, 2,
             2, 0, 2, 0, 0, 0, 2, 2, 1, 3, 3, 1, 1, 1],
            [3, 3, 1, 1, 1, 3, 1, 1, 1, 2, 0, 0, 2, 0, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 2, 0, 2,
             2, 0, 0, 2, 0, 0, 0, 2, 3, 3, 1, 1, 1, 1],
            [3, 3, 1, 3, 1, 3, 1, 1, 2, 0, 0, 0, 0, 2, 4, 4, 4, 2, 2, 5, 5, 5, 5, 5, 5, 2, 6, 6, 2, 6, 6, 6, 2, 2, 0, 2,
             2, 2, 0, 2, 0, 0, 0, 2, 3, 3, 1, 3, 3, 1],
            [3, 3, 1, 1, 3, 1, 1, 2, 0, 0, 0, 0, 0, 0, 2, 4, 4, 4, 4, 2, 2, 2, 5, 5, 2, 6, 6, 6, 6, 6, 2, 2, 4, 2, 0, 0,
             2, 2, 0, 2, 0, 0, 0, 2, 2, 3, 3, 1, 1, 1],
            [1, 3, 3, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 2, 0, 0,
             2, 2, 0, 2, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1],
            [1, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 0, 0, 0,
             2, 2, 0, 2, 0, 0, 0, 0, 2, 1, 1, 1, 3, 3],
            [1, 1, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 0, 0, 0, 0,
             2, 2, 0, 2, 0, 0, 0, 0, 2, 1, 1, 3, 3, 3],
            [1, 1, 1, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0,
             2, 2, 0, 2, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1],
            [1, 1, 1, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             2, 2, 0, 2, 0, 0, 0, 0, 0, 2, 3, 3, 3, 1],
            [3, 1, 3, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             2, 2, 0, 2, 0, 0, 0, 0, 0, 2, 1, 3, 3, 3],
            [3, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
             2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 1, 1, 3],
            [1, 3, 3, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
             2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1],
            [1, 1, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
             2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1],
            [1, 2, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
             0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1],
            [2, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2,
             0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1],
            [0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0,
             0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2],
            [0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0,
             2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
            [0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 2,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0, 2, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 2, 2, 2, 0, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 2, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            ]

        for y in range(0,50):
            for x in range(0,50):
                self.draw(Point(55 - x, 60 - y, colors[bitmap[y][x]], self.frame))

        self.release()

        self.select()

    def select(self):
        song = AudioSegment.from_wav(os.path.join(os.path.dirname(__file__), "resources", "sounds", "Magic-sound-effect.wav"))
        play(song)

    def cycle_heads(self, direction):
        pass

    def cycle_body(self, direction):
        pass

    def cycle_legs(self, direction):
        pass

    def start_animation(self, enemy):
        self.release()
        self.move_to(enemy, 20)
        for i in range(25):
            time.sleep(0.03)
            self.y += 1

        for i in range(25):
            time.sleep(0.03)
            self.y -= 1

    def attack(self, enemy: Enemy):
        if abs(enemy.x - self.x) < 20:
            enemy.get_attacked(self, 30)

    def super(self, enemy: Enemy):
        for i in range(100):
            self._body()

            time.sleep(0.01)

            rect = Rectangle(-i, 20, 15, 10, pyxel.COLOR_CYAN, self.frame)

            self.draw(rect)
            self.draw(Sprinkles(30, pyxel.COLOR_YELLOW, rect))
            self.release()

        self.special -= 20
        enemy.get_attacked(enemy, 50)
        self._body()
        self.release()

    def block(self, enemy: Enemy):
        self.is_blocked = True

    def walk(self, direction, enemy: Enemy):
        for i in range(8):
            time.sleep(0.03)

            if i == 0:
                self.y += 3

            self.x += direction

        self.y -= 3

    def win_animation(self, enemy: Enemy):
        self.move_to(enemy, 5)
        for i in range(10):
            time.sleep(0.03)
            self.y += 1

        for i in range(10):
            time.sleep(0.03)
            self.y -= 1

        time.sleep(2)

    def lose_animation(self, enemy: Enemy):
        for i in range(500):
            time.sleep(0.01)
            self.y -= 1

    def get_attacked(self, enemy, damage):
        if not self.is_blocked:
            self.health -= damage
        self.is_blocked = False

    def get_pushed(self, enemy, distance):
        self.move_to(enemy, distance)

    def get_kicked(self, enemy, damage, distance):
        self.move_to(enemy, distance)
